{"version":3,"file":"static/js/463.9f972f8f.chunk.js","mappings":"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","sources":["webpack://portfolio/./src/components/_Contact.module.css?6868","components/Contact.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contact-section\":\"_Contact_contact-section__MlNXm\",\"container\":\"_Contact_container__7w-Kv\",\"h2\":\"_Contact_h2__F9huk\",\"form-container\":\"_Contact_form-container__6eQ6t\",\"contact-form\":\"_Contact_contact-form__0SSVo\",\"validation-error\":\"_Contact_validation-error__DBV9k\",\"valid-input\":\"_Contact_valid-input__++7B4\",\"gridContainer\":\"_Contact_gridContainer__nJiTW\",\"gridItem\":\"_Contact_gridItem__DwMHm\",\"text-wrapper\":\"_Contact_text-wrapper__efWko\",\"text-above-image\":\"_Contact_text-above-image__YYl6P\",\"text-below-image\":\"_Contact_text-below-image__c+hVz\",\"contact-image\":\"_Contact_contact-image__kWnqZ\"};","import React, { useState } from \"react\";\r\nimport styles from \"./_Contact.module.css\";\r\nimport swal from \"sweetalert\";\r\nimport contact from \"./../images/contact.png\";\r\nimport { useForm, ValidationError } from \"@formspree/react\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction ContactForm() {\r\n  const [state, handleSubmit] = useForm(\"mleyykdv\");\r\n\r\n  const [nameValid, setNameValid] = useState(false);\r\n  const [emailValid, setEmailValid] = useState(false);\r\n  const [phoneValid, setPhoneValid] = useState(true);\r\n  const [messageValid, setMessageValid] = useState(false);\r\n\r\n  const validateName = (value) => {\r\n    // Add your custom validation logic for the name field\r\n    const isValid = value.length > 0;\r\n    setNameValid(isValid);\r\n    return isValid;\r\n  };\r\n\r\n  const validateEmail = (value) => {\r\n    // Add your custom validation logic for the email field\r\n    const isValid = /\\S+@\\S+\\.\\S+/.test(value);\r\n    setEmailValid(isValid);\r\n    return isValid;\r\n  };\r\n\r\n  const validatePhone = (value) => {\r\n    // Add your custom validation logic for the phone field\r\n    const isValid = value === \"\" || /^[0-9]{10}$/.test(value);\r\n    setPhoneValid(isValid);\r\n    return isValid;\r\n  };\r\n\r\n  const validateMessage = (value) => {\r\n    // Add your custom validation logic for the message field\r\n    const isValid = value.length > 0;\r\n    setMessageValid(isValid);\r\n    return isValid;\r\n  };\r\n\r\n  if (\r\n    nameValid &&\r\n    emailValid &&\r\n    phoneValid &&\r\n    messageValid &&\r\n    state.succeeded\r\n  ) {\r\n    setNameValid(false);\r\n    setEmailValid(false);\r\n    setMessageValid(false);\r\n    Swal.fire({\r\n      title: \"Message Sent!\",\r\n      text: \"Thank you for reaching out. I've received your message. I'll get back to you asap.\",\r\n      icon: \"success\",\r\n      timer: 1500,\r\n      confirmButtonColor:\"#2ba2a2\"\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        document.getElementById(\"contact-form\").reset();\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={styles[\"contact-section\"]} id=\"contact\">\r\n      <div className={styles[\"container\"]}>\r\n        <h2 className={styles.h2}>Contact</h2>\r\n        <div className={styles.gridContainer}>\r\n          <div className={styles.gridItem}>\r\n            <div className={styles[\"text-wrapper\"]}>\r\n              <div className={styles[\"text-above-image\"]}>\r\n                <h3>GET IN TOUCH</h3>\r\n              </div>\r\n              <a\r\n                target=\"_blank\"\r\n                href=\"https://pngtree.com/freepng/two-people-watching-the-phone_4762502.html\"\r\n              >\r\n                <img src={contact} className={styles[\"contact-image\"]} />\r\n              </a>\r\n              <div className={styles[\"text-below-image\"]}>\r\n                <p>\r\n                  Feel free to reach out and start a conversation. Let's connect\r\n                  and explore the possibilities together.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.gridItem}>\r\n            <div className={styles[\"form-container\"]}>\r\n              <form\r\n                onSubmit={handleSubmit}\r\n                id=\"contact-form\"\r\n                className={styles[\"contact-form\"]}\r\n              >\r\n                <input\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  required\r\n                  placeholder=\"Name\"\r\n                  onChange={(e) => validateName(e.target.value)}\r\n                  // style={{\r\n                  //   borderColor: nameValid ? \"green\" : \"red\",\r\n                  // }}\r\n                />\r\n\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  required\r\n                  placeholder=\"Email Address\"\r\n                  onChange={(e) => validateEmail(e.target.value)}\r\n                  // style={{\r\n                  //   borderColor: emailValid ? \"green\" : \"red\",\r\n                  // }}\r\n                />\r\n                <ValidationError\r\n                  prefix=\"Email\"\r\n                  field=\"email\"\r\n                  errors={state.errors}\r\n                  className={styles[\"validation-error\"]}\r\n                  // style={{\r\n                  //   display: emailValid ? \"none\" : \"block\",\r\n                  // }}\r\n                />\r\n\r\n                <input\r\n                  id=\"phone\"\r\n                  type=\"tel\"\r\n                  name=\"phone\"\r\n                  pattern=\"[0-9]{10}\"\r\n                  placeholder=\"Phone (optional)\"\r\n                  onChange={(e) => validatePhone(e.target.value)}\r\n                  // style={{\r\n                  //   borderColor: phoneValid ? \"green\" : \"red\",\r\n                  // }}\r\n                />\r\n                <ValidationError\r\n                  prefix=\"Phone\"\r\n                  field=\"phone\"\r\n                  errors={state.errors}\r\n                  className={styles[\"validation-error\"]}\r\n                  // style={{\r\n                  //   display: phoneValid ? \"none\" : \"block\",\r\n                  // }}\r\n                />\r\n\r\n                <textarea\r\n                  id=\"message\"\r\n                  name=\"message\"\r\n                  required\r\n                  placeholder=\"Message\"\r\n                  onInput={(e) => validateMessage(e.target.value)}\r\n                  style={{\r\n                    borderColor: messageValid ? \"green\" : \"#a22b2b\",\r\n                  }}\r\n                />\r\n                <ValidationError\r\n                  prefix=\"Message\"\r\n                  field=\"message\"\r\n                  errors={state.errors}\r\n                  className={styles[\"validation-error\"]}\r\n                  // style={{\r\n                  //   display: messageValid ? \"none\" : \"block\",\r\n                  // }}\r\n                />\r\n\r\n                <input\r\n                  name=\"subject\"\r\n                  type=\"hidden\"\r\n                  value={`New submission from {{ name }}`}\r\n                />\r\n\r\n                <button type=\"submit\" disabled={state.submitting}>\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n"],"names":["_useForm","useForm","_useForm2","_slicedToArray","state","handleSubmit","_useState","useState","_useState2","nameValid","setNameValid","_useState3","_useState4","emailValid","setEmailValid","_useState5","_useState6","phoneValid","setPhoneValid","_useState7","_useState8","messageValid","setMessageValid","succeeded","Swal","title","text","icon","timer","confirmButtonColor","then","result","isConfirmed","document","getElementById","reset","_jsx","className","styles","id","children","_jsxs","target","href","src","contact","onSubmit","type","name","required","placeholder","onChange","e","value","isValid","length","validateName","test","validateEmail","ValidationError","prefix","field","errors","pattern","validatePhone","onInput","validateMessage","style","borderColor","disabled","submitting"],"sourceRoot":""}