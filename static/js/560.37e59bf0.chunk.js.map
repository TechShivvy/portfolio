{"version":3,"file":"static/js/560.37e59bf0.chunk.js","mappings":"gLACA,EAAqC,yCAArC,EAA6F,mC,4BC+D7F,MA5DA,WACE,IAAAA,GAAgDC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDI,EAAgBF,EAAA,GAAEG,EAAmBH,EAAA,GAC5CI,GAAsCL,EAAAA,EAAAA,UAASM,OAAOC,YAAWC,GAAAN,EAAAA,EAAAA,GAAAG,EAAA,GAA1DI,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElC,SAASG,IACP,IAAMC,EACJC,SAASC,gBAAgBF,WAAaC,SAASE,KAAKH,UAChDI,EAAeH,SAASC,gBAAgBE,aACxCC,EAAeJ,SAASC,gBAAgBG,aAC1CC,EAAsBC,KAAKC,IAC5BR,GAAaI,EAAeC,GAAiB,IAC9C,KAEFC,EAAsBC,KAAKE,IAAIH,EAAqB,GACpDd,EAAoBc,EACtB,CAEA,SAASI,IACPZ,EAAeJ,OAAOC,WACxB,CAEA,SAASgB,IACHjB,OAAOkB,QAAUlB,OAAOmB,YAC1BC,IAAE,uBAAuBC,OAAO,KAEhCD,IAAE,uBAAuBE,QAAQ,EAErC,CAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WASR,OARAN,IACAZ,IACAW,IAEAI,IAAEpB,QAAQwB,GAAG,gBAAiBP,GAC9BG,IAAEpB,QAAQwB,GAAG,gBAAiBnB,GAC9Be,IAAEpB,QAAQwB,GAAG,SAAUR,GAEhB,WACLI,IAAEpB,QAAQyB,IAAI,gBAAiBR,GAC/BG,IAAEpB,QAAQyB,IAAI,gBAAiBpB,GAC/Be,IAAEpB,QAAQyB,IAAI,SAAUT,EAC1B,CACF,GAAG,KAGDU,EAAAA,EAAAA,KAAA,OACEC,UAAWC,EACXC,GAAG,qBACHC,MAAO3B,GAAe,IAAM,CAAE4B,IAAK,QAAW,CAAEA,IAAK,OAAQC,UAE7DN,EAAAA,EAAAA,KAAA,OACEC,UAAWC,EACXC,GAAG,eACHC,MAAO,CAAEG,MAAM,GAADC,OAAKrB,KAAKC,IAAIjB,EAAkB,KAAI,SAI1D,C","sources":["webpack://portfolio/./src/components/_Progressbar.module.css?ad81","components/Progressbar.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"progress-container\":\"_Progressbar_progress-container__Jjs90\",\"progress-bar\":\"_Progressbar_progress-bar__Lfn8Z\"};","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./_Progressbar.module.css\";\r\nimport $ from \"jquery\";\r\n\r\nfunction Progressbar() {\r\n  const [scrollPercentage, setScrollPercentage] = useState(0);\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n  function updateProgressBar() {\r\n    const scrollTop =\r\n      document.documentElement.scrollTop || document.body.scrollTop;\r\n    const scrollHeight = document.documentElement.scrollHeight;\r\n    const clientHeight = document.documentElement.clientHeight;\r\n    let newScrollPercentage = Math.min(\r\n      (scrollTop / (scrollHeight - clientHeight)) * 100,\r\n      100\r\n    );\r\n    newScrollPercentage = Math.max(newScrollPercentage, 0);\r\n    setScrollPercentage(newScrollPercentage);\r\n  }\r\n\r\n  function updateWindowWidth() {\r\n    setWindowWidth(window.innerWidth);\r\n  }\r\n\r\n  function showProgressBar() {\r\n    if (window.scrollY > window.innerHeight) {\r\n      $(\"#progress-container\").fadeIn(400);\r\n    } else {\r\n      $(\"#progress-container\").fadeOut(0);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    showProgressBar();\r\n    updateProgressBar();\r\n    updateWindowWidth();\r\n\r\n    $(window).on(\"resize scroll\", showProgressBar);\r\n    $(window).on(\"resize scroll\", updateProgressBar);\r\n    $(window).on(\"resize\", updateWindowWidth);\r\n\r\n    return () => {\r\n      $(window).off(\"resize scroll\", showProgressBar);\r\n      $(window).off(\"resize scroll\", updateProgressBar);\r\n      $(window).off(\"resize\", updateWindowWidth);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={styles[\"progress-container\"]}\r\n      id=\"progress-container\"\r\n      style={windowWidth >= 768 ? { top: \"50px\" } : { top: \"0px\" }}\r\n    >\r\n      <div\r\n        className={styles[\"progress-bar\"]}\r\n        id=\"progress-bar\"\r\n        style={{ width: `${Math.min(scrollPercentage, 100)}%` }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Progressbar;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","scrollPercentage","setScrollPercentage","_useState3","window","innerWidth","_useState4","windowWidth","setWindowWidth","updateProgressBar","scrollTop","document","documentElement","body","scrollHeight","clientHeight","newScrollPercentage","Math","min","max","updateWindowWidth","showProgressBar","scrollY","innerHeight","$","fadeIn","fadeOut","useEffect","on","off","_jsx","className","styles","id","style","top","children","width","concat"],"sourceRoot":""}